networks:
  rest_bridge:

services:
  rest:
    image: apache/iceberg-rest-fixture
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_CATALOG__IMPL=org.apache.iceberg.jdbc.JdbcCatalog
      - CATALOG_URI=jdbc:sqlite:file:/tmp/iceberg_rest_mode=memory
      - CATALOG_WAREHOUSE=s3://icebergdata/demo
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_INCLUDE__CREDENTIALS=true
      - CATALOG_S3_ACCESS__KEY__ID=admin
      - CATALOG_S3_SECRET__ACCESS__KEY=password
      - CATALOG_CLIENT_REGION=us-east-1
    depends_on:
      - minio
    networks:
      rest_bridge:
    ports:
      - 8181:8181
    expose:
      - 8181

  minio:
    image: minio/minio:RELEASE.2024-03-07T00-43-48Z
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
      - MINIO_DEFAULT_BUCKETS=icebergdata
    hostname: icebergdata.minio
    networks:
      rest_bridge:
    ports:
      - 9001:9001
    expose:
      - 9001
      - 9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc:RELEASE.2024-03-07T00-31-49Z
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done; /usr/bin/mc rm -r --force minio/icebergdata; /usr/bin/mc mb minio/icebergdata; /usr/bin/mc policy set public minio/icebergdata; tail -f /dev/null "
    networks:
      rest_bridge:

  spark-iceberg:
    build: spark/
    networks:
      rest_bridge:
    depends_on:
      - rest
      - minio
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    links:
      - rest:rest
      - minio:minio
